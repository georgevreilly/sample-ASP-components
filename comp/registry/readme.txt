                      Registry Access Component
                      =========================



Table of Contents
=================

    Overview
    Installation
    File List
    Sample ASP
    Build Notes
    Support
    Change Notes


Overview
========

The Registry Access Component is an Active Server Pages component that
can be used to read and modify strings and numbers in the system
Registry.  It can also be used to delete keys (and all associated
subkeys and values) and to delete simple values, and it can be used to
recursively copy keys.  It will also work with registry keys on remote
machines.  See the accompanying documentation for full details.

This component can also be used with Visual Basic and other systems
that lack facilities for direct manipulation of the system registry.


Installation
============

In order to use this component you must register it.  This will allow Active
Server Pages (ASP) Scripting Languages and other languages to make use of
the component.  ASP uses either the Server.CreateObject("ObjectName") syntax
or the <object id="myName" progid="ObjectName" runat="server"> syntax to
gain access to an object.  New objects can be made ready for use by
installing a new component.  Note: One component may contain more than one
object definition.

The following directions are to help you register the component for use:
 1. Use the Start menu, Programs option to start a Command Prompt
 2. Type *one* of the following, according to your processor type:
        cd \InetPub\ASPSamp\Components\Registry\DLL\Alpha
        cd \InetPub\ASPSamp\Components\Registry\DLL\i386
        cd \InetPub\ASPSamp\Components\Registry\DLL\PPC
 3. Type:
        regsvr32 Reg.dll
Note: you must register the component on each IIS server where you intend
to use it.

If you have trouble registering components, you may be using the wrong
version of RegSvr32.exe.  Please use the version installed by default in
the directory <InstallDir>\ASP\Cmpnts.  On Windows NT, the default
installation directory is \winnt\System32\Inetsrv.  On Windows 95, it is
\Program Files\WebSvr\System.

(If you rebuild the source code, the makefile will automatically reregister
the component for you.)

The following directions are to help you test the registered component:
 1. Use the Windows Explorer to copy all of the Sample files from
    \InetPub\ASPSamp\Components\Registry\Samples to \InetPub\ASPSamp\Samples.
 2. In your browser, open http://localhost/ASPSamp/Samples/registry.asp
You must copy the sample file to a virtual directory; if you attempt to
examine it with a browser in the Registry\Samples directory, ASP will not
execute the script.


File List
=========

File             Description
----             -----------

.\Source

 RegObj.cpp      the C++ source code for the registry access component, CRegObj
 RegObj.h        declarations for CRegObj
 Reg.idl         the declaration of IRegObj, the IDispatch-based interface
 Makefile        a makefile that can be used with nmake
 Reg.mak         the Developer Studio makefile
 debug.cpp       useful debugging stubs
 debug.h         useful debugging macros and declarations for debug.cpp
 Reg.cpp         )
 Reg.def         )
 Reg.mdp         )
 Reg.rc          )
 RegPS.def       } Generated by the ATL COM AppWizard
 RegPS.mak       )
 Resource.h      )
 StdAfx.cpp      )
 StdAfx.h        )

.\Samples

 Registry.asp    Script demonstrating the use of the registry access component
 AspReg.asp      Script showing current values of Active Server Pages
                 registry entries


Samples
=======

You must copy the sample to a virtual directory (it need not be a
virtual root) on an IIS Server before it will work.


Build Notes
===========

This sample requires Microsoft Visual C++ 4.2b or newer.  If you are using
VC 4.2, it is necessary that you upgrade to VC 4.2b, using the patch which
can be found at http://www.microsoft.com/visualc/patches/v4.2b/vc42b.htm
Note that this patch will not work with earlier or later versions of
Visual C++, only with VC 4.2.

This sample also requires ATL (Microsoft Active Template Library)
version 2.0 or newer.  ATL 2.1 ships with Visual C++ 5.0.  ATL 2.0 for
VC 4.2b can be downloaded from: http://www.microsoft.com/visualc/prodinfo/
You do not need the ATL Docs or Object Wizard Technology Preview to build
the registry access component, but you will probably find them useful.

You can build this component with nmake at the command line.  Read
Makefile for more details.  You can also build it in Microsoft
Developer Studio, using the Reg.mdp project.

The component can be built as ANSI or Unicode.  If you intend to run
it on Windows 95, build it as ANSI.  Running it as a Unicode DLL will
probably not improve performance noticeably, as little time is spent
executing the Unicode<->ANSI conversions in this component.


Support
=======

This component is not officially supported by Microsoft Corporation.
Peer support is available on the Active Server Pages mailing list or on
the microsoft.public.inetserver.iis.activeserverpages newsgroup.

To subscribe to the Active Server Pages mailing list, send mail to
listserv@listserv.msn.com with

subscribe ActiveServerPages [firstname lastname]

in the body of the message, and then follow the directions carefully.
(firstname and lastname are optional.)

You can reach the newsgroup through msnews.microsoft.com and other NNTP
servers.


Change Notes
============

Version 1.0 Beta 1: February 1997
---------------------------------

First release.


Version 1.0 Beta 2: March 1997
------------------------------

* Fixed Developer Studio makefile problems in C++ components.
* Upgraded to build cleanly with ATL 2.0 (Visual C++ 4.2b) and ATL 2.0 (VC5).
* Type Library name changes
* Check for new returning NULL a la ATL itself
* Made Set() smarter about what kinds of VARIANTs it will accept


Version 1.0 Release 1: September 1997
-------------------------------------

* Added support for binary and multi string data types.

